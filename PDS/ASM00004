//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL COROUTINE',MSGCLASS=S,CLASS=K,
//  TIME=(,30)
//PROCLIB JCLLIB ORDER=USERID.DVL.PROC
//        SET TITLE1='XXX.ASM00004'
//OUTPUT INCLUDE MEMBER=DESTCH
//*-------------------------------------------------------------------*
//*        ASSEMBLY                                                   *
//*-------------------------------------------------------------------*
//STEP02   EXEC HLASMCLG
//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR
//         DD DSN=SYS1.MACLIB,DISP=SHR
//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,
//           SPACE=(1700,(600,100))
//C.SYSPUNCH DD DUMMY
//C.SYSIN DD *
         TITLE 'COROUTINES'
         PRINT NOGEN
*---------------------------------------------------------------------*
*        17 JUL 1980 - CHARLES HOTTEL                                 *
*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194       *
*        COROUTINE EXAMPLE                                            *
*---------------------------------------------------------------------*
* TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A  *
* SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,     *
*                                                                     *
* A2B5E3426FG0ZYW3210PQ89R.                                           *
*                                                                     *
* BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT   *
* CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE  *
* FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT. *
* A NONDIGIT SIMPLY DENOTES ITSELF.                                   *
*                                                                     *
* OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS *
* OF THREE CHARACTERS:                                                *
*                                                                     *
* ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.             *
*                                                                     *
* TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE    *
* NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE      *
* INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE*
* INTO THREE-DIGIT GROUPS.                                            *
*                                                                     *
* 'IN' ------BALR R7,R8 -----> 'OUT'                                  *
* 'IN' <-----BALR R8,R7 ------ 'OUT'                                  *
*---------------------------------------------------------------------*
COROUTS  START
         STM   R14,R12,12(R13)
         BALR  R15,0
         USING *,R15
         L     R1,MAIN-16
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         LM    R10,R12,MAIN-12
         DROP  R15
         USING MAIN,R10,R11,R12
         B     MAIN
         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)
*---------------------------------------------------------------------*
*   MAIN LINE CODE: INITIALIZATION AND LINKAGE FOR COROUTINES         *
*---------------------------------------------------------------------*
MAIN     EQU   *
         OPEN  (READER,INPUT,PUNCH,OUTPUT)
         LA    R6,CARDIN+79      R6 FOR NEXTCHAR
         SR    R5,R5             R5 FOR FIRST COROUTINE 'IN'
         L     R7,=A(IN)         INITIALIZE COROUTINE LINKAGE REGISTER
         B     OUT               START WITH COROUTINE 'OUT'
         TITLE 'SUBROUTINE FOR CHARACTER INPUT'
NEXTCHAR EQU   *
         ST    R9,R9HOLD         SAVE LINK REGISTER
NEXT1    LA    R6,1(R6)          ADVANCE POINTER
         CL    R6,=A(CARDIN+80)  NEED TO READ?
         BNE   BLANKCK           NO, CHECK FOR BLANK
         GET   READER,CARDIN     YES, READ NEXT CARD
         LA    R6,CARDIN         POINT TO 1ST CHARACTER
BLANKCK  CLI   0(R6),X'40'       BLANK?
         BE    NEXT1             YES, IGNORE BLANKS
         L     R9,R9HOLD         NO, RETURN
         BR    R9
*
READER   DCB   DSORG=PS,RECFM=F,BLKSIZE=80,LRECL=80,MACRF=GM,          X
               DDNAME=READER,EODAD=ERROR
ERROR    ABEND 0001
R9HOLD   DS    F
CARDIN   DS    CL80
         DS    0F
         TITLE 'FIRST COROUTINE: IN'
SENDIT   BALR  R7,R8             SEND CHAR TO OUT COROUTINE
IN       BAL   R9,NEXTCHAR       GET CHARACTER
         CLI   0(R6),X'F0'       LESS THAN ZERO?
         BL    SENDIT
         CLI   0(R6),X'F9'       GREATER THAN NINE?
         BH    SENDIT            YES
         NI    0(R6),X'0F'       DIGIT FOUNT, CLEAR ZONE
         IC    R5,0(R6)          PUT DIGIT IN R5
         LA    R5,1(R5)          DIGIT + 1 IN R5
         BAL   R9,NEXTCHAR       GET NEXT CHAR
REPEAT   BALR  R7,R8             SEND TO OUT COROUTINE
         BCT   R5,REPEAT         REPEAT IF NECESSARY
         B     IN
         TITLE 'SECOND COROUTINE: OUT '
OUT      LA    R4,PUNCHOUT+1     START NEW OUTPUT RECORD
         MVC   PUNCHOUT+1(132),PUNCHOUT
NEXTIN   BALR  R8,R7             GET NEXT TRANSLATED CHARACTER
         MVC   0(1,R4),0(R6)     STORE IN OUTPUT
         CLI   0(R6),X'4B'       IS IT A PERIOD?
         BE    PERIOD            YES
         BALR  R8,R7             NO, GET ANOTHER CHARACTER
         MVC   1(1,R4),0(R6)     STORE IN OUTPUT
         CLI   0(R6),X'4B'       IS IT A PERIOD?
         BE    PERIOD            YES
         BALR  R8,R7             NO, GET ANOTHER CHARACTER
         MVC   2(1,R4),0(R6)     STORE IN OUTPUT
         CLI   0(R6),X'4B'       IS IT A PERIOD?
         BE    PERIOD            YES
         LA    R4,4(R4)          ADVANCE OUTPUT POINTER
         CL    R4,=A(PUNCHOUT+133)      END OF LINE?
         BNE   NEXTIN
PERIOD   PUT   PUNCH,PUNCHOUT    YES, PRINT A LINE
         CLI   0(R6),X'4B'       LAST CHAR A PERIOD?
         BNE   OUT               NO
         CLOSE (READER,,PUNCH)   YES, EXIT LINKAGE
MAIN99   SR    R15,R15
         B     SEXIT
         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'
*
*   COMMON SUBROUTINE ENTRY
*
SENTER   STM   R14,R12,12(R13)
         C     R13,=A(SAVEND)
         BL    SENTER1
         DC    H'0'
         DC    C'SAVE AREA OVERFLOW'
SENTER1  LR    R9,R15
         LA    R15,72(R13)
         ST    R15,8(R13)
         ST    R13,4(R15)
         LR    R13,R15
         BR    R9
*
*   COMMON SUBROUTINE EXIT
*
SEXIT    L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         OI    15(R13),X'01'
         BR    R14
         TITLE 'REGISTER EQUATES AND USAGE'
*
*   REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE
R10      EQU   10  BASE REGISTER FOR MAIN
R11      EQU   11  BASE REGISTER FOR MAIN
R12      EQU   12  BASE REGISTER FOR MAIN
R13      EQU   13  SAVE AREA ADDRESS
R14      EQU   14  SEXIT RETURN ADDRESS
R15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9
*                  RETURN CODE FROM SUBROUTINE
         TITLE 'DATA'
PUNCHOUT DS    0CL133
         DC    C' '
         DS    CL132
PUNCH    DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27930,LRECL=133,             X
               DDNAME=PUNCH,MACRF=PM
         DS    0F
COROUTS1 CSECT
*
*   REMOTE AREAS
*
SAVE     DS    90D
SAVEND   EQU   *
         END   COROUTS
//G.READER   DD *
A2B5E3426FG0ZYW3210PQ89R.
/*
//G.PUNCH    DD SYSOUT=*
//G.SYSOUT   DD SYSOUT=*
//G.SYSUDUMP DD SYSOUT=*
