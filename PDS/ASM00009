//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL TOPSORT',MSGCLASS=S,CLASS=K,
//  TIME=(,30)
//PROCLIB JCLLIB ORDER=USERID.DVL.PROC
//        SET TITLE1='XXX.ASM00009'
//OUTPUT INCLUDE MEMBER=DESTCH
//*-------------------------------------------------------------------*
//*        ASSEMBLY                                                   *
//*-------------------------------------------------------------------*
//STEP02   EXEC HLASMCLG
//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR
//         DD DSN=SYS1.MACLIB,DISP=SHR
//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,
//           SPACE=(1700,(600,100))
//C.SYSPUNCH DD DUMMY
//C.SYSIN DD *
         TITLE 'TOPOLOGICAL SORT'
         PRINT NOGEN
*---------------------------------------------------------------------*
*        29 APR 1981 - CHARLES HOTTEL                                 *
*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 250-265       *
*        TOPOLOGICAL SORT (DOES NOT PRINT OUT LOOPS)                  *
*---------------------------------------------------------------------*
* R6 = N                                                              *
* R5 = F                                                              *
* R4 = K                                                              *
* R3 = J AND R                                                        *
* R2 = AVAIL AND P                                                    *
* R12 = PTR TO STORAGE                                                *
*---------------------------------------------------------------------*
TOPSORT  START
         STM   R14,R12,12(R13)
         BALR  R15,0
         USING *,R15
         L     R1,MAIN-12
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         LM    R10,R11,MAIN-8
         DROP  R15
         USING MAIN,R10,R11
         B     MAIN
         DC    A(SAVE,MAIN,MAIN+4096)
*---------------------------------------------------------------------*
*   MAIN LINE CODE: INPUT PHASE                                       *
*   T1. INITIALIZE                                                    *
*---------------------------------------------------------------------*
MAIN     EQU   *
         OPEN  (READER,INPUT,PRINTER,OUTPUT)
         GET   READER,INBUF        YES, READ NEXT CARD
         PACK  DBLWORD,INBUF(4)    PACK N
         CVB   R6,DBLWORD          BINARY N
         LR    R4,R6               K <- N
         LA    R4,1(R4)
         LA    R8,STORAGE
         USING X,R8
ZEROHEAD XC    HEADER,HEADER       ZERO O-N ENTRIES
         LA    R8,8(R8)
         BCT   R4,ZEROHEAD
         LR    R2,R8               SET AVAIL
         USING DIRSUCC,R2
         LA    R12,STORAGE
*---------------------------------------------------------------------*
* T2. NEXT RELATION                                                   *
*---------------------------------------------------------------------*
READREL  GET   READER,INBUF        READ NEXT CARD
*---------------------------------------------------------------------*
* T3. RECORD THE RELATION                                             *
*---------------------------------------------------------------------*
         PACK  DBLWORD,INBUF(4)    PACK J
         CVB   R3,DBLWORD          BINARY J
         PACK  DBLWORD,INBUF+5(4)  PACK K
         CVB   R4,DBLWORD          BINARY K
         LR    R8,R4               K
         SLL   R8,3                8*K DISP TO ENTRY
         L     R9,COUNT(R12)       COUNT(K)
         LA    R9,1(R9)            COUNT(K) + 1
         ST    R9,COUNT(R12)
         LR    R8,R3               J
         SLL   R8,3                8*J DISP TO ENTRY
         L     R9,TOP(R12)         GET TOP(J)
         ST    R9,NEXT             NEXT(P) <- TOP(J)
         ST    R4,SUC              SUC(P) <- K
         ST    R2,TOP(R12)         TOP(J) <- P
         LA    R2,8(R2)            AVAIL <- AVAIL + 8
         B     READREL             NEXT RELATION
*---------------------------------------------------------------------*
* T4. SCAN FOR ZEROS                                                  *
*---------------------------------------------------------------------*
EOF      LR    R4,R6               K <- N
         SR    R3,R3               R <- ZERO
LOOP1    LR    R8,R4               K
         SLL   R8,3                8*K DISP TO ENTRY
         L     R9,COUNT(R12)       GET COUNT
         LTR   R9,R9               COUNT ZERO?
         BNZ   DECK                NO
         ST    R8,0(R12,R3)        YES, PUT INTO QUEUE QLINK(R) <- K
         LR    R3,R8               R <- K
DECK     BCT   R4,LOOP1            K <- K - 1
*---------------------------------------------------------------------*
* SORTING PHASE                                                       *
* T5. OUTPUT FROM FRONT OF QUEUE                                      *
*---------------------------------------------------------------------*
         L     R5,QLINK0           F <- QLINK(0)
OUTPUTIT LR    R9,R5               GET DISPL
         SRL   R9,3                CONVERT TO DIGIT
         CVD   R9,DBLWORD          PACKED DIGIT
         OI    DBLWORD+7,X'0F'     SET SIGN
         UNPK  PRTDATA(4),DBLWORD+5(3)    UNPACK SUCCESSOR
         PUT   PRINTER,OUTBUF
         LTR   R5,R5               IS F ZERO?
         BZ    ENDIT               YES
         S     R6,=F'1'            NO, N <- N - 1
         LR    R8,R5               DISPL TO ENTRY
         L     R2,TOP(R12)         P <- TOP(F)
         LTR   R2,R2               ZERO?
         BZ    DEQUE               YES
*---------------------------------------------------------------------*
* T6. ERASE RELATIONS                                                 *
*---------------------------------------------------------------------*
NEXT1    L     R4,SUC              NO, GET SUC(P)
         LR    R8,R4
         SLL   R8,3                DISPL TO COUNT (SUC(P))
         L     R9,COUNT(R12)       GET COUNT(SUC(P))
         S     R9,=F'1'            COUNT <- COUNT - 1
         ST    R9,COUNT(R12)       SAVE NEW COUNT
         LTR   R9,R9               ZERO?
         BNZ   NEXT2               NO, NEXT ENTRY PTR
         ST    R8,0(R12,R3)        YES, PUT ON QUEUE
         LR    R3,R8
NEXT2    L     R2,NEXT             P <- NEXT(P)
         LTR   R2,R2               ZERO?
         BNZ   NEXT1
*---------------------------------------------------------------------*
* T7. REMOVE FROM QUEUE                                               *
*---------------------------------------------------------------------*
DEQUE    LR    R8,R5               COPY F
         L     R5,QLINK(R12)       F <- QLINK(F)
         B     OUTPUTIT
*---------------------------------------------------------------------*
* T8. END OF PROCESS                                                  *
*---------------------------------------------------------------------*
ENDIT    CVD   R6,DBLWORD          PACKED N
         OI    DBLWORD+7,X'0F'     SET SIGN
         UNPK  NPRT(4),DBLWORD+5(3)    UNPACK N
         MVI   PRTDATA,X'40'
         MVC   PRTDATA+1(78),PRTDATA
         MVC   PRTDATA(8),NDATA
         PUT   PRINTER,OUTBUF
         CLOSE (READER,,PRINTER)
MAIN99   SR    R15,R15
         B     SEXIT
         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'
*
*   COMMON SUBROUTINE ENTRY
*
SENTER   STM   R14,R12,12(R13)
         C     R13,=A(SAVEND)
         BL    SENTER1
         DC    H'0'
         DC    C'SAVE AREA OVERFLOW'
SENTER1  LR    R9,R15
         LA    R15,72(R13)
         ST    R15,8(R13)
         ST    R13,4(R15)
         LR    R13,R15
         BR    R9
*
*   COMMON SUBROUTINE EXIT
*
SEXIT    L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         OI    15(R13),X'01'
         BR    R14
         TITLE 'REGISTER EQUATES AND USAGE'
*
*   REGISTER EQUATES
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE
R10      EQU   10  BASE REGISTER FOR MAIN
R11      EQU   11  BASE REGISTER FOR MAIN
R12      EQU   12  BASE REGISTER FOR MAIN
R13      EQU   13  SAVE AREA ADDRESS
R14      EQU   14  SEXIT RETURN ADDRESS
R15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9
*                  RETURN CODE FROM SUBROUTINE
         TITLE 'DATA'
         DS    0D
DBLWORD  DS    D
INBUF    DS    CL80
OUTBUF   DS    0CL80
CC       DC    C' '
PRTDATA  DS    CL79
NDATA    DC    C'N = '
NPRT     DS    XL4
READER   DCB   DSORG=PS,RECFM=FB,BLKSIZE=27920,LRECL=80,MACRF=GM,      X
               DDNAME=READER,EODAD=EOF
PRINTER  DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27920,LRECL=80,              X
               DDNAME=PRINTER,MACRF=PM
         DS    0F
         TITLE 'LITERALS'
         LTORG
         TITLE 'DATA AREAS'
STORAGE  EQU   *
QLINK0   DS    2F'0'
         DC    1000XL8'00'
         TITLE 'DSECTS'
X        DSECT
HEADER   DS    0CL8
QLINK    DS    0F
COUNT    DS    F
TOP      DS    F
*
DIRSUCC  DSECT
SUC      DS    F
NEXT     DS    F
*
TOPSORT1 CSECT
*
*   REMOTE AREAS
*
SAVE     DS    90D
SAVEND   EQU   *
         END   TOPSORT
//G.READER   DD *
0009      NUMBER OF OBJECTS IS NINE
0009 0002 NINE PRECEDES TWO
0003 0007
0007 0005
0005 0008
0008 0006
0004 0006
0001 0003
0007 0004
0009 0005
0002 0008
/*
//G.PRINTER  DD SYSOUT=*
//G.SYSOUT   DD SYSOUT=*
//G.SYSUDUMP DD SYSOUT=*
